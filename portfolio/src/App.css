:root {
    --primary-color: #6c63ff;
    --secondary-color: #2a2a72;
    --dark-color: #222;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
    --transition: all 0.3s ease;
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    background-color: var(--light-color);
    color: var(--dark-color);
    overflow-x: hidden;
  }
  
  button {
    cursor: pointer;
    font-family: inherit;
  }
  
  a {
    text-decoration: none;
    color: inherit;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  section {
    padding: 5rem 0;
  }
  
  .section-title {
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 3rem;
    position: relative;
  }
  
  .section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: var(--primary-color);
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideUp {
    from { transform: translateY(50px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  @keyframes slideInLeft {
    from { transform: translateX(-100px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  @keyframes slideInRight {
    from { transform: translateX(100px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.05);
      opacity: 0.8;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  
  @keyframes rotateIn {
    from {
      transform: rotate(-90deg) scale(0.3);
      opacity: 0;
    }
    to {
      transform: rotate(0) scale(1);
      opacity: 1;
    }
  }
  
  @keyframes shimmer {
    0% {
      background-position: -100% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  
  @keyframes morph {
    0% {
      border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
    }
    50% {
      border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    }
    100% {
      border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
    }
  }
  
  .float-animation {
    animation: float 6s ease-in-out infinite;
  }
  
  .pulse-animation {
    animation: pulse 3s ease-in-out infinite;
  }
  
  .rotate-in {
    animation: rotateIn 1s forwards;
  }
  
  .fade-in {
    animation: fadeIn 1s ease-in-out;
  }
  
  .slide-up {
    animation: slideUp 1s ease-in-out;
  }
  
  .slide-in-left {
    animation: slideInLeft 1s ease-in-out;
  }
  
  .slide-in-right {
    animation: slideInRight 1s ease-in-out;
  }

  .section {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }
  
  .active-section {
    opacity: 1;
    transform: translateY(0);
  }

  /* Ajoutez ces styles à App.css */
@keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.05);
      opacity: 0.8;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  
  @keyframes rotateIn {
    from {
      transform: rotate(-90deg) scale(0.3);
      opacity: 0;
    }
    to {
      transform: rotate(0) scale(1);
      opacity: 1;
    }
  }
  
  @keyframes shimmer {
    0% {
      background-position: -100% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  
  @keyframes morph {
    0% {
      border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
    }
    50% {
      border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    }
    100% {
      border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
    }
  }
  
  .float-animation {
    animation: float 6s ease-in-out infinite;
  }
  
  .pulse-animation {
    animation: pulse 3s ease-in-out infinite;
  }
  
  .rotate-in {
    animation: rotateIn 1s forwards;
  }
  
  .section {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 1s ease, transform 1s ease;
    will-change: opacity, transform;
  }
  
  .active-section {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Optionnellement, ajoutez du délai entre les sections */
  #about.section { transition-delay: 0.1s; }
  #skills.section { transition-delay: 0.2s; }
  #projects.section { transition-delay: 0.3s; }
  #contact.section { transition-delay: 0.4s; }

  body.dark-theme {
    --primary-color: #8A80FF;
    --secondary-color: #4F46E5;
    --dark-color: #f5f5f5;
    --light-color: #1E1E1E;
    --success-color: #4CAF50;
    --error-color: #FF5252;
    
    background-color: #121212;
    color: #f5f5f5;
  }
  
  body.dark-theme .header.scrolled,
  body.dark-theme .header.side-nav.hovered {
    background-color: rgba(25, 25, 25, 0.95);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }
  
  body.dark-theme .project-card,
  body.dark-theme .skill-card,
  body.dark-theme .contact-card,
  body.dark-theme .education-card,
  body.dark-theme .timeline-content {
    background-color: #1E1E1E;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
  
  body.dark-theme .contact-form input,
  body.dark-theme .contact-form textarea {
    background-color: #2C2C2C;
    border-color: #3D3D3D;
    color: #f5f5f5;
  }
  
  body.dark-theme .footer {
    background-color: #0F0F0F;
  }
  
  body.dark-theme .nav-dot {
    background-color: #f5f5f5;
  }
  
  /* CSS pour les animations avancées à ajouter à App.css */
  .parallax {
    transition: transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
  }
  
  .parallax-scroll {
    transition: transform 0.1s linear;
    will-change: transform;
  }
  
  .page-transition {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--primary-color);
    z-index: 9999;
    pointer-events: none;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.6s;
  }
  
  .page-transition.active {
    opacity: 1;
    visibility: visible;
  }
  
  .page-transition.fade {
    transition: opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.6s;
  }
  
  .page-transition.slide {
    transform: translateX(-100%);
    transition: transform 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.6s;
  }
  
  .page-transition.slide.active {
    transform: translateX(0);
  }
  
  .page-transition.zoom {
    transform: scale(0);
    transition: transform 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.6s;
  }
  
  .page-transition.zoom.active {
    transform: scale(1);
  }
  
  .distort-image {
    transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275), border-radius 0.3s ease;
    overflow: hidden;
  }
  
  .glitch-effect {
    animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }
  
  @keyframes glitch {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-5px, 5px);
    }
    40% {
      transform: translate(-5px, -5px);
    }
    60% {
      transform: translate(5px, 5px);
    }
    80% {
      transform: translate(5px, -5px);
    }
    100% {
      transform: translate(0);
    }
  }
  
  .physics-animation {
    transition: none;
    will-change: transform;
  }

  /* Grille brisée pour les sections About, Projects, etc. */
.broken-grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: 30px;
    position: relative;
    padding: 4rem 0;
  }
  
  .broken-grid-item {
    grid-column: span 6;
    position: relative;
    z-index: 1;
  }
  
  .broken-grid-item.wide {
    grid-column: span 8;
  }
  
  .broken-grid-item.narrow {
    grid-column: span 4;
  }
  
  .broken-grid-item.push-right {
    grid-column-start: 7;
  }
  
  .broken-grid-item.push-left {
    grid-column-end: 7;
  }
  
  .broken-grid-item.overlap-top {
    margin-top: -50px;
  }
  
  .broken-grid-item.overlap-bottom {
    margin-bottom: -50px;
  }
  
  @media screen and (max-width: 768px) {
    .broken-grid {
      grid-template-columns: 1fr;
      grid-gap: 20px;
    }
    
    .broken-grid-item,
    .broken-grid-item.wide,
    .broken-grid-item.narrow,
    .broken-grid-item.push-right,
    .broken-grid-item.push-left {
      grid-column: 1 / -1;
    }
    
    .broken-grid-item.overlap-top,
    .broken-grid-item.overlap-bottom {
      margin-top: 0;
      margin-bottom: 0;
    }
  }
  
  /* CSS pour la typographie créative */
  /* À ajouter à App.css */
  
  .creative-title {
    font-size: 3.5rem;
    line-height: 1;
    font-weight: 900;
    margin-bottom: 2rem;
    background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    position: relative;
    display: inline-block;
  }
  
  .creative-title::before {
    content: attr(data-text);
    position: absolute;
    left: 0.5rem;
    top: 0.5rem;
    z-index: -1;
    -webkit-text-fill-color: transparent;
    -webkit-text-stroke: 1px rgba(108, 99, 255, 0.3);
  }
  
  .accent-text {
    font-family: 'Playfair Display', serif;
    font-style: italic;
    font-weight: 600;
    color: var(--primary-color);
  }
  
  .large-letter::first-letter {
    font-size: 3em;
    float: left;
    line-height: 0.8;
    margin-right: 0.1em;
    color: var(--primary-color);
  }
  
  .staggered-text span {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    animation: staggerFadeIn 0.5s forwards;
  }
  
  @keyframes staggerFadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Gradient dynamique pour le fond de certaines sections */
  /* À ajouter dans App.css */
  
  .dynamic-gradient {
    position: relative;
    overflow: hidden;
  }
  
  .dynamic-gradient::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(108, 99, 255, 0.1), rgba(42, 42, 114, 0.1));
    z-index: -1;
    transition: transform 0.5s ease;
  }
  
  .dynamic-gradient:hover::before {
    transform: scale(1.05) rotate(-1deg);
  }
  
  /* Exemple de mise en œuvre du gradient 3D pour les boutons */
  /* À ajouter dans App.css */
  
  .gradient-button {
    position: relative;
    padding: 1rem 2.5rem;
    background: var(--primary-color);
    border: none;
    color: white;
    font-weight: 600;
    border-radius: 50px;
    transition: all 0.3s ease;
    overflow: hidden;
    z-index: 1;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .gradient-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    z-index: -1;
    transition: transform 0.3s ease;
  }
  
  .gradient-button:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
  }
  
  .gradient-button:hover::before {
    transform: scale(1.05);
  }

  .gradient-button:active {
    transform: translateY(0);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  }
  
  /* Exemple de mise en œuvre du gradient 3D pour les boutons */
  .gradient-button::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, var(--primary-color), transparent, var(--secondary-color));
    border-radius: 50px;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .gradient-button:hover::after {
    opacity: 1;
  }
  
  /* Styles pour la grille brisée avancée */
  .broken-grid-item.floating {
    transform: translateY(-20px);
  }
  
  .broken-grid-item.shadow-accent {
    box-shadow: 20px 20px 60px rgba(108, 99, 255, 0.1), -20px -20px 60px rgba(108, 99, 255, 0.05);
  }
  
  .broken-grid-item.border-accent {
    border-left: 4px solid var(--primary-color);
    padding-left: 20px;
  }
  
  .broken-grid-item.diagonal {
    transform: rotate(-2deg);
  }
  
  .broken-grid-item.diagonal:hover {
    transform: rotate(0);
  }
  
  /* Style pour les titres créatifs avec effet de double ombre */
  .creative-title-shadow {
    position: relative;
    font-size: 3.5rem;
    font-weight: 800;
    color: var(--primary-color);
  }
  
  .creative-title-shadow::before,
  .creative-title-shadow::after {
    content: attr(data-text);
    position: absolute;
    left: 0;
    top: 0;
    z-index: -1;
  }
  
  .creative-title-shadow::before {
    top: 5px;
    left: 5px;
    color: rgba(108, 99, 255, 0.2);
  }
  
  .creative-title-shadow::after {
    top: 10px;
    left: 10px;
    color: rgba(42, 42, 114, 0.1);
  }
  
  /* Styles pour les cartes avec effet de perspective */
  .perspective-card {
    transform-style: preserve-3d;
    perspective: 1000px;
    transition: transform 0.5s ease;
  }
  
  .perspective-card:hover {
    transform: rotateY(10deg);
  }
  
  .perspective-card .card-front,
  .perspective-card .card-back {
    backface-visibility: hidden;
    transition: all 0.5s ease;
  }
  
  .perspective-card .card-back {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: rotateY(180deg);
    background-color: var(--primary-color);
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    border-radius: inherit;
  }
  
  .perspective-card:hover .card-front {
    transform: rotateY(-10deg);
  }
  
  .perspective-card:hover .card-back {
    transform: rotateY(170deg);
  }
  
  /* Styles pour les éléments superposés avec effet de profondeur */
  .depth-element {
    position: relative;
    overflow: visible;
  }
  
  .depth-element::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--secondary-color);
    z-index: -1;
    border-radius: inherit;
    transform: translate(15px, 15px);
    opacity: 0.2;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
  
  .depth-element:hover::before {
    transform: translate(20px, 20px);
    opacity: 0.3;
  }
  
  /* Styles pour le texte avec effet de découpe */
  .cutout-text {
    font-size: 5rem;
    font-weight: 900;
    color: white;
    -webkit-text-fill-color: transparent;
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: var(--primary-color);
    text-shadow: 5px 5px 0px rgba(108, 99, 255, 0.2);
    transition: all 0.3s ease;
  }
  
  .cutout-text:hover {
    -webkit-text-stroke-color: var(--secondary-color);
    text-shadow: 8px 8px 0px rgba(108, 99, 255, 0.3);
    transform: skew(-3deg);
  }
  
  /* Styles pour les dividers créatifs */
  .creative-divider {
    height: 5px;
    width: 100%;
    margin: 3rem 0;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--primary-color) 20%, 
      var(--secondary-color) 50%, 
      var(--primary-color) 80%, 
      transparent 100%
    );
    position: relative;
  }
  
  .creative-divider::before {
    content: '';
    position: absolute;
    width: 15px;
    height: 15px;
    background-color: var(--primary-color);
    border-radius: 50%;
    top: -5px;
    left: 50%;
    transform: translateX(-50%);
  }
  
  .creative-divider.zig-zag {
    height: 20px;
    background: 
      linear-gradient(-45deg, var(--light-color) 10px, transparent 0), 
      linear-gradient(45deg, var(--light-color) 10px, var(--primary-color) 0);
    background-size: 20px 20px;
    border: none;
  }
  
  /* Styles pour les sections avec effet de grain */
  .grain-bg {
    position: relative;
    overflow: hidden;
  }
  
  .grain-bg::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.05;
    pointer-events: none;
  }
  
  /* Styles pour les boutons avec effet liquide */
  .liquid-button {
    position: relative;
    padding: 1rem 2rem;
    border: none;
    color: white;
    font-weight: 600;
    background: var(--primary-color);
    cursor: pointer;
    border-radius: 50px;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .liquid-button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100px;
    height: 100px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.5s ease;
  }
  
  .liquid-button:hover::before {
    transform: translate(-50%, -50%) scale(3);
  }
  
  .liquid-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  /* Styles pour les images avec effet de cadre décalé */
  .frame-image {
    position: relative;
    padding: 20px;
  }
  
  .frame-image img {
    position: relative;
    z-index: 1;
    width: 100%;
    transition: all 0.3s ease;
  }
  
  .frame-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 2px solid var(--primary-color);
    transform: translate(20px, 20px);
    transition: all 0.3s ease;
  }
  
  .frame-image:hover::before {
    transform: translate(15px, 15px);
  }
  
  .frame-image:hover img {
    transform: translate(-5px, -5px);
    box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  /* Styles pour les conteneurs avec effet de vague */
  .wave-container {
    position: relative;
    padding: 6rem 0;
    overflow: hidden;
  }
  
  .wave-container::before,
  .wave-container::after {
    content: "";
    position: absolute;
    left: 0;
    width: 100%;
    height: 60px;
    background-size: 100% 100%;
  }
  
  .wave-container::before {
    top: 0;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z' fill='%23ffffff'/%3E%3C/svg%3E");
  }
  
  .wave-container::after {
    bottom: 0;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z' fill='%23ffffff'/%3E%3C/svg%3E");
    transform: rotate(180deg);
  }
  
  /* Styles pour les boutons avec effet néon */
  .neon-button {
    position: relative;
    display: inline-block;
    padding: 1rem 2.5rem;
    background: none;
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    font-weight: 600;
    border-radius: 5px;
    text-transform: uppercase;
    letter-spacing: 2px;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .neon-button:hover {
    background-color: var(--primary-color);
    color: white;
    box-shadow: 0 0 10px var(--primary-color), 0 0 30px var(--primary-color);
  }
  
  .neon-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.2) 50%,
      transparent 100%
    );
    transition: left 0.7s ease;
  }
  
  .neon-button:hover::before {
    left: 100%;
  }

  .btn-background {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
    transition: transform 0.5s ease, opacity 0.5s ease;
    pointer-events: none;
  }
  
  .input-focused label {
    transform: translateY(-20px) scale(0.8);
    color: var(--primary-color);
  }
  
  .card-shine {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    border-radius: inherit;
  }
  